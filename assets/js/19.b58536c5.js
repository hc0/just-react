(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{365:function(t,e,r){"use strict";r.r(e);var s=r(43),a=Object(s.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("p",[t._v("通过上一节的学习，我们了解了"),r("code",[t._v("Fiber")]),t._v("是什么，知道"),r("code",[t._v("Fiber节点")]),t._v("可以保存对应的"),r("code",[t._v("DOM节点")]),t._v("。")]),t._v(" "),r("p",[t._v("相应的，"),r("code",[t._v("Fiber节点")]),t._v("构成的"),r("code",[t._v("Fiber树")]),t._v("就对应"),r("code",[t._v("DOM树")]),t._v("。")]),t._v(" "),r("p",[t._v("那么如何更新"),r("code",[t._v("DOM")]),t._v("呢？这需要用到被称为“双缓存”的技术。")]),t._v(" "),r("h2",{attrs:{id:"什么是-双缓存"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#什么是-双缓存"}},[t._v("#")]),t._v(" 什么是“双缓存”")]),t._v(" "),r("p",[t._v("当我们用"),r("code",[t._v("canvas")]),t._v("绘制动画，每一帧绘制前都会调用"),r("code",[t._v("ctx.clearRect")]),t._v("清除上一帧的画面。如果当前帧画面计算量比较大，导致清除上一帧画面到绘制当前帧画面之间有较长间隙，就会出现白屏闪烁。")]),t._v(" "),r("p",[t._v("为了解决这个问题，我们可以在内存中绘制当前帧动画，绘制完毕后直接用当前帧替换上一帧画面，由于省去了两帧替换间的计算时间，不会出现从白屏到出现画面的闪烁情况。")]),t._v(" "),r("p",[t._v("这种"),r("strong",[t._v("在内存中构建并直接替换")]),t._v("的技术叫做"),r("a",{attrs:{href:"https://baike.baidu.com/item/%E5%8F%8C%E7%BC%93%E5%86%B2",target:"_blank",rel:"noopener noreferrer"}},[t._v("双缓存"),r("OutboundLink")],1),t._v("。")]),t._v(" "),r("p",[r("code",[t._v("React")]),t._v("使用“双缓存”来完成"),r("code",[t._v("Fiber树")]),t._v("的构建与替换——对应着"),r("code",[t._v("DOM树")]),t._v("的创建与更新。")]),t._v(" "),r("h2",{attrs:{id:"双缓存fiber树"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#双缓存fiber树"}},[t._v("#")]),t._v(" 双缓存Fiber树")]),t._v(" "),r("p",[t._v("在"),r("code",[t._v("React")]),t._v("中最多会同时存在两棵"),r("code",[t._v("Fiber树")]),t._v("。当前屏幕上显示内容对应的"),r("code",[t._v("Fiber树")]),t._v("称为"),r("code",[t._v("current Fiber树")]),t._v("，正在内存中构建的"),r("code",[t._v("Fiber树")]),t._v("称为"),r("code",[t._v("workInProgress Fiber树")]),t._v("。")]),t._v(" "),r("p",[r("code",[t._v("current Fiber树")]),t._v("中的"),r("code",[t._v("Fiber节点")]),t._v("被称为"),r("code",[t._v("current fiber")]),t._v("，"),r("code",[t._v("workInProgress Fiber树")]),t._v("中的"),r("code",[t._v("Fiber节点")]),t._v("被称为"),r("code",[t._v("workInProgress fiber")]),t._v("，他们通过"),r("code",[t._v("alternate")]),t._v("属性连接。")]),t._v(" "),r("div",{staticClass:"language-js extra-class"},[r("pre",{pre:!0,attrs:{class:"language-js"}},[r("code",[t._v("currentFiber"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("alternate "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" workInProgressFiber"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nworkInProgressFiber"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("alternate "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" currentFiber"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),r("p",[r("code",[t._v("React")]),t._v("应用的根节点通过"),r("code",[t._v("current")]),t._v("指针在不同"),r("code",[t._v("Fiber树")]),t._v("的"),r("code",[t._v("rootFiber")]),t._v("间切换来实现"),r("code",[t._v("Fiber树")]),t._v("的切换。")]),t._v(" "),r("p",[t._v("当"),r("code",[t._v("workInProgress Fiber树")]),t._v("构建完成交给"),r("code",[t._v("Renderer")]),t._v("渲染在页面上后，应用根节点的"),r("code",[t._v("current")]),t._v("指针指向"),r("code",[t._v("workInProgress Fiber树")]),t._v("，此时"),r("code",[t._v("workInProgress Fiber树")]),t._v("就变为"),r("code",[t._v("current Fiber树")]),t._v("。")]),t._v(" "),r("p",[t._v("每次状态更新都会产生新的"),r("code",[t._v("workInProgress Fiber树")]),t._v("，通过"),r("code",[t._v("current")]),t._v("与"),r("code",[t._v("workInProgress")]),t._v("的替换，完成"),r("code",[t._v("DOM")]),t._v("更新。")]),t._v(" "),r("p",[t._v("接下来我们以具体例子讲解"),r("code",[t._v("mount时")]),t._v("、"),r("code",[t._v("update时")]),t._v("的构建/替换流程。")]),t._v(" "),r("h2",{attrs:{id:"mount时"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#mount时"}},[t._v("#")]),t._v(" mount时")]),t._v(" "),r("p",[t._v("考虑如下例子：")]),t._v(" "),r("div",{staticClass:"language-js extra-class"},[r("pre",{pre:!0,attrs:{class:"language-js"}},[r("code",[r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("App")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("num"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" add"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("useState")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("p onClick"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("num"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("p"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nReactDOM"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("App"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" document"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token string"}},[t._v("'root'")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),r("ol",[r("li",[t._v("首次执行"),r("code",[t._v("ReactDOM.render")]),t._v("会创建"),r("code",[t._v("rootFiberNode")]),t._v("和"),r("code",[t._v("rootFiber")]),t._v("。其中"),r("code",[t._v("rootFiberNode")]),t._v("是整个应用的根节点，"),r("code",[t._v("rootFiber")]),t._v("是"),r("code",[t._v("<App/>")]),t._v("所在组件树的根节点。")])]),t._v(" "),r("p",[t._v("之所以要区分"),r("code",[t._v("rootFiberNode")]),t._v("与"),r("code",[t._v("rootFiber")]),t._v("，是因为在应用中我们可以多次调用"),r("code",[t._v("ReactDOM.render")]),t._v("渲染不同的组件树，他们会拥有不同的"),r("code",[t._v("rootFiber")]),t._v("。但是整个应用的根节点只有一个，那就是"),r("code",[t._v("rootFiberNode")]),t._v("。")]),t._v(" "),r("img",{attrs:{src:t.$withBase("/img/rootfiber.png"),alt:"rootFiber"}}),t._v(" "),r("div",{staticClass:"language-js extra-class"},[r("pre",{pre:!0,attrs:{class:"language-js"}},[r("code",[r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// current指向当前fiber树的根fiber")]),t._v("\nrootFiberNode"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("current "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" rootFiber"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),r("p",[t._v("由于是首屏渲染，页面中还没有任何"),r("code",[t._v("DOM")]),t._v("。所以"),r("code",[t._v("rootFiber.child === null")]),t._v("，即"),r("code",[t._v("current Fiber树")]),t._v("为空。")]),t._v(" "),r("ol",{attrs:{start:"2"}},[r("li",[t._v("接下来进入"),r("code",[t._v("render阶段")]),t._v("在内存中依次创建"),r("code",[t._v("workInProgress fiber")]),t._v("并连接在一起构建"),r("code",[t._v("workInProgress Fiber树")]),t._v("。（图中右侧为内存中构建的树，左侧为页面显示的树）")])]),t._v(" "),r("img",{attrs:{src:t.$withBase("/img/workInProgressFiber.png"),alt:"workInProgressFiber"}}),t._v(" "),r("ol",{attrs:{start:"3"}},[r("li",[t._v("图中右侧已构建完的"),r("code",[t._v("workInProgress Fiber树")]),t._v("在"),r("code",[t._v("commit阶段")]),t._v("渲染到页面。此时"),r("code",[t._v("DOM")]),t._v("更新为右侧树对应的样子。"),r("code",[t._v("rootFiberNode")]),t._v("的"),r("code",[t._v("current")]),t._v("指针指向"),r("code",[t._v("workInProgress Fiber树")]),t._v("使其变为"),r("code",[t._v("current Fiber 树")]),t._v("。")])]),t._v(" "),r("img",{attrs:{src:t.$withBase("/img/wipTreeFinish.png"),alt:"workInProgressFiberFinish"}}),t._v(" "),r("h2",{attrs:{id:"update时"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#update时"}},[t._v("#")]),t._v(" update时")]),t._v(" "),r("ol",[r("li",[t._v("接下来我们点击"),r("code",[t._v("p节点")]),t._v("触发状态改变，这会开启一次新的"),r("code",[t._v("render阶段")]),t._v("并构建一棵"),r("code",[t._v("workInProgress Fiber 树")]),t._v("。")])]),t._v(" "),r("img",{attrs:{src:t.$withBase("/img/wipTreeUpdate.png"),alt:"wipTreeUpdate"}}),t._v(" "),r("p",[t._v("其中很多"),r("code",[t._v("workInProgress fiber")]),t._v("的创建可以复用"),r("code",[t._v("current Fiber树")]),t._v("对应的节点数据。")]),t._v(" "),r("blockquote",[r("p",[t._v("这个决定是否复用的过程就是Diff算法，后面章节会详细讲解")])]),t._v(" "),r("ol",{attrs:{start:"2"}},[r("li",[r("code",[t._v("workInProgress Fiber 树")]),t._v("在"),r("code",[t._v("render阶段")]),t._v("完成构建后进入"),r("code",[t._v("commit阶段")]),t._v("渲染到页面上。渲染完毕后，"),r("code",[t._v("workInProgress Fiber 树")]),t._v("变为"),r("code",[t._v("current Fiber 树")]),t._v("。")])]),t._v(" "),r("img",{attrs:{src:t.$withBase("/img/currentTreeUpdate.png"),alt:"currentTreeUpdate"}}),t._v(" "),r("h2",{attrs:{id:"总结"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),r("p",[t._v("本文介绍了"),r("code",[t._v("Fiber树")]),t._v("的构建与替换过程，这个过程伴随着"),r("code",[t._v("DOM")]),t._v("的更新。")]),t._v(" "),r("p",[t._v("那么在构建过程中每个"),r("code",[t._v("Fiber节点")]),t._v("是如何创建的呢？我们会在下一节讲解。")])])}),[],!1,null,null,null);e.default=a.exports}}]);